name: Build Windows Release

on:
  push:
    branches: [ main ]  # Or your release branch
  workflow_dispatch:  # Enables manual trigger from GitHub UI

jobs:
  build-windows:
    runs-on: windows-latest  # Uses a Windows VM in the cloud

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.9.0'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_mingw'  # Or 'win64_msvc2019_64' for MSVC
        modules: 'qtcharts'  # Add any extra modules you need
        install-deps: true  # Installs dependencies like MinGW or MSVC

    - name: Install Build tools
      shell: cmd
      run: choco install -y cmake ninja

    - name: Check Tools
      shell: cmd
      run: |
        cmake --version
        ninja --version
        gcc --version
        g++ --version
        echo "PATH "
        echo %PATH%
        echo "MinGW location"
        dir "%QT_ROOT_DIR%/tools"

    - name: Build
      shell: cmd
      run: |
        mkdir release
        mkdir build
        cd build
        cmake -S .. -B . -G "Ninja" -DCMAKE_C_COMPILER="gcc.exe" -DCMAKE_CXX_COMPILER="g++.exe" -DCMAKE_BUILD_TYPE="Release" -DCMAKE_INSTALL_PREFIX="{{github.workspace}}/release"
        cmake --build . --target all install

    - name: Package Executable
      shell: cmd
      run: |
        # Zip the release folder
        7z a NIC-Stats.zip build/release/*

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: NIC-Stats-Windows
        path: NIC-Stats.zip
